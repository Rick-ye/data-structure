Netty私有协议的设计思路

1、消息定义
（1）消息头---
    crcCode：校验码
    length: 整个消息的长度，包括消息头和消息体
    sessionId: 集群内回话id，由会话ID生成器生成
    type: 消息类型；0-业务请求消息；1-业务响应消息；2-业务one-way消息(即使请求又是响应消息)；3握手请求消息；4握手应答消息；5心跳请求消息；6心跳应答消息
    priority: 消息优先级：0-255
    attachment: 可选字段，用于拓展消息头
（2）消息体---Body
    自定义

2、链路的建立
黑白名单安全认证机制，本协议基于IP地址的安全认证，如果有多个IP，通过逗号分隔。
如果是外网，验证机制要加密认证等，要复杂很多

3、链路的关闭
（1）对方宕机或者重启，会主动关闭链路
（2）消息读写过程中发生IO异常，需要主动关闭链路
（3）心跳读写过程中发生IO异常，需要主动关闭链路
（4）心跳超时，需要主动关闭链路
（5）发生编码异常等不可恢复的错误时，需要主动关闭链路

4、可靠性设计
（1）心跳机制
    a.当客户端网络处于空闲状态持续时间到达T（连续周期T没有读写消息）时，客户端主动发送Ping心跳消息到服务端
    b.当达到时间周期T还没有收到Pong心跳响应或者读取到服务端发送的业务消息，则心跳失败计数器+1
    c.每当客户端收到心跳消息或者业务响应消息，则心跳失败计数器清零；当心跳失败计数器累积到N次，则关闭链路，间隔INTERVAL时间发起重连
    d.当服务端空闲状态持续时间T，则服务端心跳失败计数器+1；只要接到客户端的心跳消息或者业务请求消息，就清零
    e.服务端连续N次没有收到客户端的客户端的心跳消息或者业务请求消息，则关闭链路，释放资源，等待客户端的重连
（2）重连机制
    如果链路发生中断，由客户端经过INTERVAL时间后发起重连，直到连接成功
    重连失败需要打印异常堆信息
（3）重复登录保护
    客户端在握手成功后，正常情况下不允许重复登录，以防止客户端在异常情况下反复连接导致资源被耗尽
    IP校验，在服务端缓存列表里验证是否已经登录，如果已经登录，拒绝登录，返回错误码-1，
（4）消息缓存重发
    当发生链路中断之后，在链路恢复之前，消息缓存队列中待发送的消息不能丢失，等链路恢复之后重新发送这些消息。
    考虑到内存溢出的风险，建议消息队列设置上限，超过上限拒绝继续向队列中添加新的消息。


类型设计
1.消息类——NettyMessage
（1）消息头——Header
（2）消息体——Object

2.消息编解码
(1)Netty消息编码类——NettyMessageEncoder
(2)消息编码工具类——MarshallingEncoder
(3)Netty消息解码类——NettyMessageDecoder
(4)消息解码工具类——MarshallingDecoder

3.握手和安全认证机制
请求——LoginAuthReqHandler
响应——LoginAuthRespHandler

4.心跳检测机制
请求——HeartBeatReqHandler
响应——HeartBeatRespHandler

5.断开重连机制

6.客户端——NettyClient
7.服务端——NettyServer
